{"version":3,"sources":["components/Texto.js","components/Personal.js","components/Education.js","components/Experience.js","App.js","reportWebVitals.js","index.js"],"names":["Texto","props","firstName","className","NoPrint","onClick","handleEdit","lastName","email","phoneNumber","company","position","from","to","tasks","schoolName","title","Personal","handleChange","e","index","target","name","value","list","personal","setPersonal","useState","editMode","setEditMode","handleSubmit","preventDefault","prevMode","onSubmit","type","placeholder","item","onChange","id","required","Education","education","setEducation","length","splice","handleRemoveInput","Experience","experience","setExperience","App","handleAddInput","PrintProvider","Print","map","window","print","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebf394b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport  { NoPrint} from 'react-easy-print';\r\n\r\nexport default function Texto (props) {\r\n\tif (props.firstName) {\r\n\t\treturn (\r\n\t\t\t<div className='textSection'>\r\n\t\t\t\t<NoPrint>\r\n\t\t\t\t<button onClick={props.handleEdit}>Edit</button>\r\n\t\t\t\t</NoPrint>\r\n                    <p>\r\n\t\t\t\t\t<span className='categoryText'>First Name:</span> {props.firstName}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span className='categoryText'>Last Name:</span> {props.lastName}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span className='categoryText'>Email:</span> {props.email}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span className='categoryText'>Phone Number:</span> {props.phoneNumber}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t)\r\n        } else if (props.company) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='textSection'>\r\n\t\t\t\t<NoPrint>\r\n\t\t\t\t<button onClick={props.handleEdit}>Edit</button>\r\n\t\t\t\t</NoPrint>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span className='categoryText'>Company Name:</span>{' '}\r\n\t\t\t\t\t\t{props.company}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span className='categoryText'>Position:</span>\r\n\t\t\t\t\t\t{props.position}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span className='categoryText'>From:</span> {props.from}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span className='categoryText'>To:</span> {props.to}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span className='categoryText'>Tasks:</span> {props.tasks}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<div className='textSection'>\r\n\t\t\t\t<NoPrint>\r\n\t\t\t\t<button onClick={props.handleEdit}>Edit</button>\r\n\t\t\t\t</NoPrint>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span className='categoryText'>School Name:</span> {props.schoolName}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span className='categoryText'>Study:</span> {props.title}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span className='categoryText'>From: </span>\r\n\t\t\t\t\t\t{props.from}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span className='categoryText'>To:</span> {props.to}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}","import React,{useState} from 'react';\r\nimport '../App.css';\r\nimport Texto from './Texto';\r\nimport { NoPrint } from 'react-easy-print';\r\n\r\n\r\nfunction Personal(props) {\r\n\r\n  const handleChange = (e, index) => {  // it will update the value based on the index\r\n\r\n    const {name, value} = e.target;\r\n    const list = [...props.personal];\r\n      list[index][name] = value;\r\n      props.setPersonal(list);\r\n  }\r\n\r\n  const handleRemoveInput = index =>{\r\n    const list = [...props.personal];\r\n    list.splice(index, 1);\r\n    props.setPersonal(list)\r\n  }\r\n\r\n\r\n  const [editMode, setEditMode] = useState(true);\r\n\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    setEditMode((prevMode) => !prevMode);\r\n      }\r\n\r\n    if (!editMode) {\r\n  return (\r\n    <Texto\r\n      firstName={props.item.firstName}\r\n      lastName={props.item.lastName}\r\n      email={props.item.email}\r\n      phoneNumber={props.item.phoneNumber}\r\n      handleEdit={handleSubmit}\r\n    />\r\n  );\r\n}     \r\n        return (\r\n          <NoPrint>\r\n          <form key ={props.id} className=\"box\" onSubmit={handleSubmit}>\r\n          <input\r\n          type=\"text\"\r\n          name = \"firstName\"\r\n          placeholder =\"First Name\"\r\n          className=\"mr10\"\r\n          value ={props.item.firstName}\r\n          onChange ={e =>handleChange(e,props.id)} // tenemos que usar un segundo atributo (index) para manejar multipls values.\r\n          required  \r\n          />\r\n          \r\n           <input\r\n          type=\"text\"\r\n          name = \"lastName\"\r\n          placeholder =\"Last Name\"\r\n          className=\"mr10\"\r\n          value ={props.item.lastName}\r\n          onChange ={e =>handleChange(e,props.id)}\r\n          required    \r\n          />\r\n\r\n          <input\r\n          type=\"email\"\r\n          name = \"email\"\r\n          placeholder =\"example@gmail.com\"\r\n          className=\"mr10\"\r\n          value ={props.item.email}\r\n          onChange ={e =>handleChange(e,props.id)}\r\n          required  \r\n          />\r\n\r\n          <input\r\n          type=\"text\"\r\n          name = \"phoneNumber\"\r\n          placeholder =\"Phone Number\"\r\n          className=\"mr10\"\r\n          value ={props.item.phoneNumber}\r\n          onChange ={e =>handleChange(e,props.id)}\r\n          required     \r\n          />\r\n\r\n          <button className='formBtn'>Save</button>\r\n      \r\n    {/*       {props.personal.length - 1 === props.id && <input\r\n          type=\"button\"\r\n          value = \"add\"\r\n          onClick={props.handleAddInput}\r\n          />} */}\r\n          </form>\r\n          </NoPrint>\r\n        );\r\n}\r\n\r\nexport default Personal;\r\n","import React,{useState} from 'react';\r\nimport '../App.css';\r\nimport Texto from './Texto';\r\nimport { NoPrint } from 'react-easy-print';\r\n\r\n\r\nfunction Education(props) {\r\n\r\n  const handleChange = (e, index) => {  // it will update the value based on the index\r\n\r\n    const {name, value} = e.target;\r\n    const list = [...props.education];\r\n      list[index][name] = value;\r\n      props.setEducation(list);\r\n  }\r\n\r\n  const handleRemoveInput = index =>{\r\n    const list = [...props.education];\r\n    list.splice(index, 1);\r\n    props.setEducation(list)\r\n  }\r\n\r\n\r\n  const [editMode, setEditMode] = useState(true);\r\n\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    setEditMode((prevMode) => !prevMode);\r\n      }\r\n\r\n    if (!editMode) {\r\n  return (\r\n    <Texto\r\n      schoolName={props.item.schoolName}\r\n      title={props.item.title}\r\n      from={props.item.from}\r\n      to={props.item.to}\r\n      handleEdit={handleSubmit}\r\n    />\r\n  );\r\n}     \r\n        return (\r\n          <NoPrint>\r\n          <form key ={props.id} className=\"box\" onSubmit={handleSubmit}>\r\n          <input\r\n          type=\"text\"\r\n          name = \"schoolName\"\r\n          placeholder =\"School Name\"\r\n          className=\"mr10\"\r\n          value ={props.item.schoolName}\r\n          onChange ={e =>handleChange(e,props.id)} // tenemos que usar un segundo atributo (index) para manejar multipls values.\r\n          required  \r\n          />\r\n          \r\n           <input\r\n          type=\"text\"\r\n          name = \"title\"\r\n          placeholder =\"Title of study\"\r\n          className=\"mr10\"\r\n          value ={props.item.title}\r\n          onChange ={e =>handleChange(e,props.id)}\r\n          required    \r\n          />\r\n\r\n          <input\r\n          type=\"date\"\r\n          name = \"from\"\r\n          placeholder =\"From\"\r\n          className=\"mr10\"\r\n          value ={props.item.from}\r\n          onChange ={e =>handleChange(e,props.id)}\r\n          required  \r\n          />\r\n\r\n          <input\r\n          type=\"date\"\r\n          name = \"to\"\r\n          placeholder =\"To\"\r\n          className=\"mr10\"\r\n          value ={props.item.to}\r\n          onChange ={e =>handleChange(e,props.id)}\r\n          required     \r\n          />\r\n\r\n          <button className='formBtn'>Save</button>\r\n\r\n          {props.education.length > 1 && <input\r\n          type=\"button\"\r\n          value = \"remove\"\r\n          className=\"mr10\"\r\n          onClick ={() => handleRemoveInput(props.id)}\r\n          />}\r\n\r\n    {/*       {props.education.length - 1 === props.id && <input\r\n          type=\"button\"\r\n          value = \"add\"\r\n          onClick={props.handleAddInput}\r\n          />} */}\r\n          </form>\r\n          </NoPrint>\r\n        );\r\n}\r\n\r\nexport default Education;\r\n","import React,{useState} from 'react';\r\nimport '../App.css';\r\nimport Texto from './Texto';\r\nimport { NoPrint } from 'react-easy-print';\r\n\r\n\r\nfunction Experience(props) {\r\n\r\n  const handleChange = (e, index) => {  // it will update the value based on the index\r\n\r\n    const {name, value} = e.target;\r\n    const list = [...props.experience];\r\n      list[index][name] = value;\r\n      props.setExperience(list);\r\n  }\r\n\r\n  const handleRemoveInput = index =>{\r\n    const list = [...props.experience];\r\n    list.splice(index, 1);\r\n    props.setExperience(list)\r\n  }\r\n\r\n\r\n  const [editMode, setEditMode] = useState(true);\r\n\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    setEditMode((prevMode) => !prevMode);\r\n      }\r\n\r\n    if (!editMode) {\r\n  return (\r\n    <Texto\r\n      company={props.item.company}\r\n      position={props.item.position}\r\n      from={props.item.from}\r\n      to={props.item.to}\r\n      tasks={props.item.tasks}\r\n      handleEdit={handleSubmit}\r\n    />\r\n  );\r\n}     \r\n        return (\r\n          <NoPrint>\r\n          <form key ={props.id} className=\"box\" onSubmit={handleSubmit}>\r\n          <input\r\n          type=\"text\"\r\n          name = \"company\"\r\n          placeholder =\"Company\"\r\n          className=\"mr10\"\r\n          value ={props.item.company}\r\n          onChange ={e =>handleChange(e,props.id)} // tenemos que usar un segundo atributo (index) para manejar multipls values.\r\n          required  \r\n          />\r\n          \r\n           <input\r\n          type=\"text\"\r\n          name = \"position\"\r\n          placeholder =\"Position\"\r\n          className=\"mr10\"\r\n          value ={props.item.position}\r\n          onChange ={e =>handleChange(e,props.id)}\r\n          required    \r\n          />\r\n\r\n        <input\r\n          type=\"date\"\r\n          name = \"from\"\r\n          placeholder =\"From\"\r\n          className=\"mr10\"\r\n          value ={props.item.from}\r\n          onChange ={e =>handleChange(e,props.id)}\r\n          required  \r\n          />\r\n\r\n          <input\r\n          type=\"date\"\r\n          name = \"to\"\r\n          placeholder =\"To\"\r\n          className=\"mr10\"\r\n          value ={props.item.to}\r\n          onChange ={e =>handleChange(e,props.id)}\r\n          required     \r\n          />\r\n\r\n        <input\r\n          type=\"text\"\r\n          name = \"tasks\"\r\n          placeholder =\"Tasks\"\r\n          className=\"mr10\"\r\n          value ={props.item.tasks}\r\n          onChange ={e =>handleChange(e,props.id)}\r\n          required     \r\n          />\r\n\r\n          <button className='formBtn'>Save</button>\r\n\r\n          {props.experience.length > 1 && <input\r\n          type=\"button\"\r\n          value = \"remove\"\r\n          className=\"mr10\"\r\n          onClick ={() => handleRemoveInput(props.id)}\r\n          />}\r\n\r\n    {/*       {props.experience.length - 1 === props.id && <input\r\n          type=\"button\"\r\n          value = \"add\"\r\n          onClick={props.handleAddInput}\r\n          />} */}\r\n          </form>\r\n          </NoPrint>\r\n        );\r\n}\r\n\r\nexport default Experience;\r\n","import React,{useState} from 'react';\nimport './App.css';\nimport Personal from './components/Personal';\nimport Education from './components/Education';\nimport Experience from './components/Experience';\nimport PrintProvider, { NoPrint, Print } from 'react-easy-print';\n\n\nfunction App() {\n  const [personal, setPersonal] = useState([{ firstName: \"\", lastName: \"\", email: \"\", phoneNumber: \"\", }]);\n  const [education, setEducation] = useState([{ schoolName: \"\", title: \"\", from: \"\", to: \"\", }]);\n  const [experience, setExperience] = useState([{ company: \"\", position: \"\", from: \"\", to: \"\", tasks: \"\", }]);\n\n  const handleAddInput = (type) => {\n    if (type === \"education\"){\n      setEducation([...education,{ schoolName: \"\", title: \"\", from: \"\", to: \"\", }]);\n    } else setExperience([...experience,{ company: \"\", position: \"\", from: \"\", to: \"\", tasks: \"\", }]); \n   }\n \n  return(\n    <PrintProvider>\n    <div className=\"App\">\n    <Print>\n      <h1>Create your CV for Free!</h1>\n      <h2>Personal Information</h2>\n    </Print>\n\n      {personal.map((e, index) => <Personal item={e} id = {index} personal={personal} setPersonal={setPersonal}/>)}\n    <Print>\n      <h2>Education</h2>\n    </Print>\n\n      {education.map((e, index) => <Education item={e} id = {index} education={education} setEducation={setEducation}/>)}\n          <NoPrint>\n          <button  value = \"add\" onClick={() => handleAddInput(\"education\")}>Add</button>\n          </NoPrint>\n\n    <Print>\n      <h2>Experience</h2>\n    </Print>\n\n      {experience.map((e, index) => <Experience item={e} id = {index} experience={experience} setExperience={setExperience}/>)}\n          <NoPrint>\n          <button  value = \"add\" onClick={handleAddInput}>Add</button>\n          </NoPrint>\n  \n          <NoPrint>\n          <button\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\twindow.print();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tclassName='print'>\n\t\t\t\t\t\t\tPrint\n\t\t\t\t\t\t</button> \n            </NoPrint>                                              \n  {/*   <pre>\n      {JSON.stringify(personal, null, 2)}\n    </pre> */}\n    </div>\n    </PrintProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}